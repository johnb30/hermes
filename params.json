{"name":"Hermes","tagline":"Text features in a box","body":"![http://caerusassociates.com/wp-content/uploads/2012/03/Caerus_logo.png](http://caerusassociates.com/wp-content/uploads/2012/03/Caerus_logo.png)\r\n\r\n# Hermes \r\n\r\n[Hermes Conrad](http://futurama.wikia.com/wiki/Hermes_Conrad) is the ~~unofficial~~ official\r\nmascot of the Hermes API.\r\n\r\n## Services\r\n\r\nHermes is a RESTful API wrapper for a number of text processing\r\nservices, allowing for the quick generation of text features. We've tried to\r\nmake it as easy as possible to deploy the service on your own system by\r\ncontainerizing each piece with [Docker](https://www.docker.com/whatisdocker/) (i.e. text\r\nfeatures in a box). The following services are currently implemented:\r\n\r\n- **MITIE:** [MIT Infromation Extraction](https://github.com/mit-nlp/MITIE).\r\n- **CLIFF:** [Server](https://github.com/c4fcm/CLIFF) for\r\n    [CLAVIN](https://github.com/Berico-Technologies/CLAVIN/tree/stable/1.1.x).\r\n    Andy Halterman has an image for running CLIFF over on [Docker\r\n    Hub](https://registry.hub.docker.com/u/ahalterman/cliff/).\r\n- **Topic Model:** LDA model with 50 topics, implemented in\r\n    [gensim](https://radimrehurek.com/gensim/). Designed for a specific set of\r\n    topics. Only stories geolocated to Iraq or Syria are run through this container.\r\n- **Mordecai:** [Geolocation software](http://caerusassociates.github.io/mordecai/) that makes use of `word2vec`\r\nand Geonames for a more accurate geolocation of placenames.\r\n\r\n## Fields\r\n\r\nHermes returns the following fields from each service\r\n\r\n- **MITIE**\r\n    - `entities`: An array of objects containing the following members.\r\n        - `entity_text`: String. The actual text pulled from the string (Ex: Syria).\r\n        - `tag`: String. The MITIE tag for the entity text (Ex: LOCATION).\r\n        - `start`: Integer. The start of the entity location in the string (Ex: 6).\r\n        - `stop`: Integer. The end of the entity location in the string (Ex: 7).\r\n        - `score`: Float. The MITIE confidence score (Ex: 1.1885840007455295).\r\n    - `html`: HTML generated for highlighting entities in dashboards, etc.\r\n    - `cleaned_tokens`: String. Tokenized words generated by the MITIE container.\r\n        For use as a bag of words.\r\n- **Mordecai**\r\n    - `focus_countries`: Dictionary of countries and the number of times each was\r\n      found in the text.\r\n    - `country_vec`: List of countries found in the text.\r\n    - `locations`: List of dictionaries including the lat, lon, country code,\r\n      placename, and term used to search Geonames for each location found in\r\n      the text.\r\n- **CLIFF**\r\n    - `cliff_people`:\r\n    - `cliff_orgs`:\r\n    - `focus_cities`:\r\n    - `focus_states`:\r\n    - `focus_counries`:\r\n    - `country_vec`:\r\n    - `stateVec`:\r\n- **Topic Model**\r\n    - `topic_model`:\r\n        - `topics`: Array of arrays that contains the topic index as the first\r\n          entry in the inner arrays and the topic weighting as the second\r\n          entry.\r\n        - `highest_topic_string`: String representation of the topic with the\r\n          highest weighting for that document.\r\n        - `highest_topic_index`: Integer representation of the topic with the\r\n          highest weighting for that document.\r\n        - `topic_strings`: Array of arrays that contains the string\r\n          representation of the topic as the first entry in the inner arrays\r\n          and the topic weighting as the second entry.\r\n\r\n\r\n## Running\r\n\r\nMake sure you have docker installed first. You can get everything setup using\r\nthe `standup.sh` script in this repo, or do it yourself. Instructions for Ubuntu can be found\r\n[here](http://docs.docker.com/installation/ubuntulinux/) and for OS X (via\r\nboot2docker) [here](https://docs.docker.com/installation/mac/). Hermes requires\r\ndocker-compose, which you can install via `sudo pip install -U docker-compose`.\r\nIf you're on OS X be sure to set your environment variable correctly using:\r\n`(boot2docker shellinit)`.\r\n\r\nThen its as simple as `sudo docker-compose up`. You can pass it the `-d` flag\r\nto run the process in the background. If you want to kill the containers just issue\r\n`sudo docker-compose kill`. To test if the api is working you can use cURL:\r\n\r\n```bash\r\ncurl -i -u user:text2features -H \"Content-Type: application/json\" -d '{\"content\": \"Insurgents bombarded a government-held part of Syria'\"'\"'s second city Aleppo overnight, killing at least eight people, Syrian state media reported. The Syrian Observatory for Human Rights, a UK-based group that tracks the war, said eight people were killed in an air strike by government forces in a separate, rebel-held part of the city.\"}' -X POST http://localhost:5000/\r\n```\r\n\r\nTo run using the Python `requests` library:\r\n\r\n```python\r\nimport json\r\nimport requests\r\n\r\nheaders = {'Content-Type': 'application/json'}\r\ndata = {\"content\": \"Insurgents bombarded a government-held part of Syria's second city Aleppo overnight, killing at least eight people, Syrian state media reported. The Syrian Observatory for Human Rights, a UK-based group that tracks the war, said eight people were killed in an air strike by government forces in a separate, rebel-held part of the city.\"}\r\ndata = json.dumps(data)\r\nout = requests.post('http://localhost:5000/', data=data, auth=('user', 'text2features'), headers=headers)\r\n```\r\n\r\nIf you are on OS X, swap out `localhost` for whatever your boot2docker IP\r\naddress is. You can find it by running `boot2docker ip`.\r\n\r\nThe response should look like this:\r\n\r\n```http\r\nHTTP/1.1 201 CREATED\r\nContent-Type: application/json\r\nContent-Length: 15823\r\nServer: TornadoServer/4.1\r\n\r\n{\r\n    \"mordecai\": {\r\n        \"focus_countries\": {\"SYR\": 1},\r\n        \"country_vec\": [\"SYR\"],\r\n        \"locations\": [{\"lat\": 36.20124, \"searchterm\": \"Aleppo\", \"lon\": 37.16117, \"countrycode\": \"SYR\", \"placename\": \"Aleppo\"}]},\r\n    \"MITIE\": {\r\n        \"entities\": [\r\n        {\"start\": 6, \"entity_text\": \"Syria\", \"tag\": \"LOCATION\", \"stop\": 7, \"score\": 1.1885840007455295}, {\"start\": 10, \"entity_text\": \"Aleppo\", \"tag\": \"LOCATION\", \"stop\": 11, \"score\": 0.6466367651771303},\r\n        {\"start\": 19, \"entity_text\": \"Syrian\", \"tag\": \"MISC\", \"stop\": 20, \"score\": 1.1922037730890405}, {\"start\": 28, \"entity_text\": \"Human Rights\", \"tag\": \"ORGANIZATION\", \"stop\": 30, \"score\": 0.6246598122395554},\r\n        {\"start\": 32, \"entity_text\": \"UK-based\", \"tag\": \"MISC\", \"stop\": 33, \"score\": 1.3681621776612611}\r\n        ],\r\n        \"html\": \"\"Insurgents bombarded a government-held part of Syria's second city Aleppo overnight , killing at least eight people , Syrian state media reported . The Syrian Observatory for <span class=\"mitie-ORGANIZATION\">Human Rights</span> , a UK-based group that tracks the war , said eight people were killed in an air strike by government forces in a separate , rebel-held part of the city .\"\"},\r\n    \"stanford\": \"\",\r\n    \"topic_model\": {\r\n        \"topics\": [[3, 0.034243498707272987], [13, 0.46906614953072645], [16, 0.19962228098935678], [37, 0.17123127281259765], [38, 0.10215258743372989]],\r\n        \"highest_topic_string\": \"Control\",\r\n        \"highest_topic_index\": 13,\r\n        \"topic_strings\": [[\"Assad\", 0.034243498707272987], [\"Control\", 0.46906614953072645], [\"Cities\", 0.19962228098935678], [\"Rebels\", 0.17123127281259765], [\"Kobani\", 0.10215258743372989]]\r\n    },\r\n    \"CLIFF\": {\r\n        \"focus_countries\": [{\"lat\": 35.0, \"lon\": 38.0, \"name\": \"Syrian Arab Republic\", \"countryCode\": \"SYR\"}],\r\n        \"cliff_orgs\": [\"Syrian Observatory for Human Rights\"],\r\n        \"focus_cities\": [{\"lat\": 36.20124, \"stateName\": \"Aleppo Governorate\", \"lon\": 37.16117, \"name\": \"Aleppo\", \"countryCode\": \"SYR\"}],\r\n        \"country_vec\": [\"SYR\"],\r\n        \"cliff_people\": [],\r\n        \"focus_states\": [{\"lat\": 36.25, \"lon\": 37.61667, \"name\": \"Aleppo Governorate\", \"countryCode\": \"SYR\", \"stateCode\": \"09\"}],\r\n        \"stateVec\": [\"Aleppo Governorate\"]\r\n    }\r\n}\r\n\r\n```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}